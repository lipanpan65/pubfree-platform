version: '3.8'

services:
  # 生产环境数据库
  mysql:
    image: mysql:8.0
    container_name: pubfree-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ../../scripts/init-prod.sql:/docker-entrypoint-initdb.d/init.sql
      - ../../backups:/backups
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=256M
    restart: unless-stopped
    networks:
      - pubfree-prod-network

  # 生产环境Redis
  redis:
    image: redis:7-alpine
    container_name: pubfree-redis-prod
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_prod_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - pubfree-prod-network

  # 生产环境后端服务
  pubfree-server:
    build: 
      context: ../../pubfree-server
      dockerfile: Dockerfile
    container_name: pubfree-server-prod
    ports:
      - "${SERVER_PORT}:8080"
    depends_on:
      - mysql
      - redis
    environment:
      - GIN_MODE=release
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE_TIME=${JWT_EXPIRE_TIME}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - prod_uploads:/app/uploads
      - ../../logs:/app/logs
    restart: unless-stopped
    networks:
      - pubfree-prod-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  # 生产环境前端服务
  pubfree-web:
    build: 
      context: ../../pubfree-web
      dockerfile: Dockerfile
    container_name: pubfree-web-prod
    ports:
      - "${WEB_PORT}:3000"
    depends_on:
      - pubfree-server
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_ENV=${VITE_ENV}
    restart: unless-stopped
    networks:
      - pubfree-prod-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # 生产环境Nginx
  nginx:
    image: nginx:alpine
    container_name: pubfree-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
      - ../../logs/nginx:/var/log/nginx
    depends_on:
      - pubfree-web
      - pubfree-server
    restart: unless-stopped
    networks:
      - pubfree-prod-network

  # 监控服务
  prometheus:
    image: prom/prometheus:latest
    container_name: pubfree-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - pubfree-prod-network

  # 日志管理
  grafana:
    image: grafana/grafana:latest
    container_name: pubfree-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    restart: unless-stopped
    networks:
      - pubfree-prod-network

volumes:
  mysql_prod_data:
  redis_prod_data:
  prod_uploads:
  prometheus_data:
  grafana_data:

networks:
  pubfree-prod-network:
    driver: bridge