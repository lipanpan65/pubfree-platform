version: '3.8'

services:
  # 测试环境数据库
  mysql:
    image: mysql:8.0
    container_name: pubfree-mysql-test
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_test_data:/var/lib/mysql
      - ../../scripts/init-test.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - pubfree-test-network

  # 测试环境Redis
  redis:
    image: redis:7-alpine
    container_name: pubfree-redis-test
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_test_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    networks:
      - pubfree-test-network

  # 测试环境后端服务
  pubfree-server:
    build: 
      context: ../../pubfree-server
      dockerfile: Dockerfile
    container_name: pubfree-server-test
    ports:
      - "${SERVER_PORT}:8080"
    depends_on:
      - mysql
      - redis
    environment:
      - GIN_MODE=release
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE_TIME=${JWT_EXPIRE_TIME}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - test_uploads:/app/uploads
    restart: unless-stopped
    networks:
      - pubfree-test-network

  # 测试环境前端服务
  pubfree-web:
    build: 
      context: ../../pubfree-web
      dockerfile: Dockerfile
    container_name: pubfree-web-test
    ports:
      - "${WEB_PORT}:3000"
    depends_on:
      - pubfree-server
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_ENV=${VITE_ENV}
    restart: unless-stopped
    networks:
      - pubfree-test-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: pubfree-nginx-test
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - pubfree-web
      - pubfree-server
    restart: unless-stopped
    networks:
      - pubfree-test-network

volumes:
  mysql_test_data:
  redis_test_data:
  test_uploads:

networks:
  pubfree-test-network:
    driver: bridge